AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  serverless-discord-bot
  A Serverless Discord Bot template built with Discord Slash Commands and AWS SAM.

Parameters:
  BotTokenSecretArn:
    Type: String
    AllowedPattern: '^arn:aws:secretsmanager:[a-z0-9-]+:[0-9]{12}:secret:[a-zA-Z0-9\/_+=.@-]+$'
    ConstraintDescription: "Parameter BotTokenSecretArn must contain a valid Secrets Manager Secret ARN"

Globals:
  Function:
    Runtime: nodejs14.x
    Timeout: 3

Resources:
  CommandsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: ./src/commands_layer

  CreateCommandsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/create_commands
      Description: "Function to create Discord Slash Commands"
      Handler: index.lambdaHandler
      Environment:
        Variables:
          BOT_TOKEN_SECRET_ARN: !Ref BotTokenSecretArn
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Ref BotTokenSecretArn
      Layers:
        - !Ref CommandsLayer

  CreateCommandsInvoker:
    Type: Custom::CreateCommandsInvoker
    Properties:
      ServiceToken: !GetAtt CreateCommandsFunction.Arn

  DiscordInteractionApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod

  DiscordHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/handler
      Description: "Serverless Function to handle incoming Discord requests"
      Handler: index.lambdaHandler
      Events:
        HelloWorld:
          Type: Api
          Properties:
            RestApiId: !Ref DiscordInteractionApi
            Path: /event
            Method: post
      Environment:
        Variables:
          DISCORD_PUBLIC_KEY: '{{resolve:ssm:/serverless-discord-bot/prod/DISCORD_PUBLIC_KEY}}'

Outputs:
  DiscordInteractionApi:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${DiscordInteractionApi}.execute-api.${AWS::Region}.amazonaws.com/prod/event/"
